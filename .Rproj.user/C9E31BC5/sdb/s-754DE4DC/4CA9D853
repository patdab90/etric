{
    "contents" : "etric.buildAEModel <- function(etric, assigment){\n  if(is.null(assigment)) return(etric)\n  etric <- createAEL1Constraint(etric, assigment)\n  etric <- createAEL2Constraint(etric, assigment)\n  etric <- createAEL3Constraint(etric, assigment)\n  etric <- createAEU1Constraint(etric, assigment)\n  etric <- createAEU2Constraint(etric, assigment)\n  etric <- createAEU3Constraint(etric, assigment)\n  return(etric)\n}\n\ncreateAEL1Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEL1.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cAB(J, a[1], a[2] - 1)] <- 1\n    lhs[i, etricutils.L()] <- -1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\">=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}\n\ncreateAEL2Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEL2.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cBA(J, a[2] - 1, a[1])] <- 1\n    lhs[i, etricutils.L()] <- -1\n    lhs[i, etricutils.e()] <- 1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\"<=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}\n\ncreateAEL3Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEL3.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cBA(J, a[2]-1, a[1])] <- -1\n    lhs[i, etricutils.cAB(J, a[1], a[2])] <- 1\n    lhs[i, etricutils.e()] <- -1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\">=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}\n\n\ncreateAEU1Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEU1.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cBA(J, a[3]+1, a[1])] <- 1\n    lhs[i, etricutils.L()] <- -1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\">=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}\n\ncreateAEU2Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEU2.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cAB(J, a[1], a[3] + 1)] <- 1\n    lhs[i, etricutils.e()] <- 1\n    lhs[i, etricutils.L()] <- -1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\"<=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}\n\ncreateAEU3Constraint <- function(etric, assignment){\n  J <- 1:etric$m\n  rownames <- paste0(\"AEU3.\",1:nrow(assignment))\n  lhs <- matrix(0, ncol=ncol(etric$constr$lhs), nrow=nrow(assignment), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  for(i in 1:nrow(assignment)){\n    a <- assignment[i, ]\n    lhs[i, etricutils.cAB(J, a[1], a[3] + 1)] <- -1\n    lhs[i, etricutils.cBA(J, a[3], a[1])] <- 1\n    lhs[i, etricutils.e()] <- -1\n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, matrix(\">=\", nrow=nrow(assignment), dimnames=list(rownames)))\n  etric$constr$rhs <- rbind(etric$constr$rhs, matrix(0, nrow=nrow(assignment), dimnames=list(rownames)))\n  return(etric)\n}",
    "created" : 1409447269450.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "399593329",
    "id" : "4CA9D853",
    "lastKnownWriteTime" : 1409313859,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI C/etric/etricassignment.R",
    "project_path" : "etricassignment.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}