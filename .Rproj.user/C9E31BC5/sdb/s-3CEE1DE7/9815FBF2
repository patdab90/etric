{
    "contents" : "etric.buildPCModel <- function(etric, pck, pcl){\n  etric <- createPCL11Constraint(etric, pck)\n  etric <- createPCL12Constraint(etric, pck)\n  etric <- createPCL13Constraint(etric, pck)\n  etric <- createPCL21Constraint(etric, pck)\n  etric <- createPCL22Constraint(etric, pck)\n  etric <- createPCL23Constraint(etric, pck)\n  etric <- createPCL3Constraint(etric, pck)\n\n  etric <- createPCU11Constraint(etric, pcl)\n  etric <- createPCU12Constraint(etric, pcl)\n  etric <- createPCU13Constraint(etric, pcl)\n  etric <- createPCU21Constraint(etric, pcl)\n  etric <- createPCU22Constraint(etric, pcl)\n  etric <- createPCU23Constraint(etric, pcl)\n  etric <- createPCU3Constraint(etric, pcl)\n  return(etric)\n}\n\ncreatePCL11Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL11.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      C <- etricutils.cAB(J, a, h-1+k)\n      lhs[h, C] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\n\ncreatePCL12Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL12.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\"<=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      C <- etricutils.cBA(J, h-1+k, a)\n      lhs[h, C] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.e()] <-  1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCL13Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL13.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h-1+k, a)\n      CAB <- etricutils.cAB(J, a, h+k) \n      lhs[h, CAB] <- 1\n      lhs[h, CBA] <- -1\n      lhs[h, etricutils.e()] <-  -1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\n\ncreatePCL21Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL21.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h+1, b) \n      lhs[h, CBA] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCL22Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL22.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\"<=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cAB(J, b, h+1) \n      lhs[h, CBA] <- 1\n      lhs[h, etricutils.e()] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCL23Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    nrows <- etric$p-k\n    rownames <- paste0(\"PCL23.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h, b)\n      CAB <- etricutils.cAB(J, a, h+1) \n      lhs[h, CAB] <- -1\n      lhs[h, CBA] <- 1\n      lhs[h, etricutils.e()] <-  -1\n      lhs[h, etricutils.vABKH(a, b, k, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCL3Constraint <- function(etric, pck){\n  J <- 1:etric$m\n  comparisons <- nrow(pck)\n  rownames <- paste0(\"PCL3.\",1:comparisons)\n  lhs <- matrix(0, nrow=comparisons, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  dir <- matrix(\">=\", nrow=comparisons, ncol=1, dimnames=list(rownames))\n  rhs <- matrix(1, nrow=comparisons, ncol=1, dimnames=list(rownames))\n  for(r in 1:comparisons){\n    pc <- pck[r,]\n    a <- pck[r,1]\n    b <- pck[r,2]\n    k <- pck[r,3]\n    \n    lhs[r, etricutils.vABKH(a, b, k, 1:(etric$p-k))] <- 1  \n    \n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, dir)\n  etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n  \n  return(etric)\n}\n\n\n\n## --- PCU ----------------------------------------------------------------------------------------------------\n\ncreatePCU11Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU11.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      C <- etricutils.cBA(J, h+1+l, a)\n      lhs[h, C] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\n\ncreatePCU12Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU12.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\"<=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      C <- etricutils.cAB(J, a, h+1+l)\n      lhs[h, C] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.e()] <-  1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCU13Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU13.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h+l, a)\n      CAB <- etricutils.cAB(J, a, h+1+l) \n      lhs[h, CAB] <- -1\n      lhs[h, CBA] <- 1\n      lhs[h, etricutils.e()] <-  -1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\n\ncreatePCU21Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU21.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CAB <- etricutils.cAB(J, b, h-1) \n      lhs[h, CAB] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCU22Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU22.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\"<=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h-1, b) \n      lhs[h, CBA] <- 1\n      lhs[h, etricutils.e()] <- 1\n      lhs[h, etricutils.L()] <- -1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCU23Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    nrows <- etric$p-l\n    rownames <- paste0(\"PCU23.\",1:nrows)\n    lhs <- matrix(0, nrow=nrows, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n    dir <- matrix(\">=\", nrow=nrows, ncol=1, dimnames=list(rownames))\n    rhs <- matrix(-M, nrow=nrows, ncol=1, dimnames=list(rownames))\n    for(h in 1:nrows){\n      CBA <- etricutils.cBA(J, h-1, b)\n      CAB <- etricutils.cAB(J, a, h) \n      lhs[h, CAB] <- 1\n      lhs[h, CBA] <- -1\n      lhs[h, etricutils.e()] <-  -1\n      lhs[h, etricutils.vABLH(a, b, l, h)] <- -M\n    }\n    \n    etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n    etric$constr$dir <- rbind(etric$constr$dir, dir)\n    etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n    \n  }\n  return(etric)\n}\n\n\ncreatePCU3Constraint <- function(etric, pcl){\n  J <- 1:etric$m\n  comparisons <- nrow(pcl)\n  rownames <- paste0(\"PCU3.\",1:comparisons)\n  lhs <- matrix(0, nrow=comparisons, ncol=ncol(etric$constr$lhs), dimnames=list(rownames, colnames(etric$constr$lhs)))\n  dir <- matrix(\">=\", nrow=comparisons, ncol=1, dimnames=list(rownames))\n  rhs <- matrix(1, nrow=comparisons, ncol=1, dimnames=list(rownames))\n  for(r in 1:comparisons){\n    pc <- pcl[r,]\n    a <- pcl[r,1]\n    b <- pcl[r,2]\n    l <- pcl[r,3]\n    \n    lhs[r, etricutils.vABLH(a, b, l, 1:(etric$p-l))] <- 1  \n    \n  }\n  etric$constr$lhs <- rbind(etric$constr$lhs, lhs)\n  etric$constr$dir <- rbind(etric$constr$dir, dir)\n  etric$constr$rhs <- rbind(etric$constr$rhs, rhs)\n  \n  return(etric)\n}\n",
    "created" : 1407562544522.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2722178350",
    "id" : "9815FBF2",
    "lastKnownWriteTime" : 1408920558,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI C/etric/etricpaiwisecmp.R",
    "project_path" : "etricpaiwisecmp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}