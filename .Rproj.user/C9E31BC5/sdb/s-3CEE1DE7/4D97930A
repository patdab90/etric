{
    "contents" : "library(ROI.plugin.glpk)\nlibrary(ROI)\nlibrary(stringr) # for tests cases\n\nsolvers <- ROI_installed_solvers()\nif (!is.na(solvers['symphony'])) {\n  .solver <<- 'symphony'\n} else if (!is.na(solvers['glpk'])) {\n  .solver <<- 'glpk'\n} else {\n  stop(\"No ROI Symphony or GLPK plugin installed\")\n}\nsource('etric.R')\n#warianty\nalts <- read.table(file=\"alts.csv\", sep=\"\\t\", header=TRUE)\nrownames(alts) = alts[,1]\nalts <- alts[,2:ncol(alts)]\n\n#granice klas\nprofs <- read.table(file=\"profs.csv\", sep=\"\\t\", header=FALSE)\nrownames(profs) = profs[,1]\nprofs <- profs[,2:ncol(profs)]\ncolnames(profs) <- colnames(alts)\n#przykładowe progi\nthresholds <- matrix(c(\n  0, 4, 0, 12,\n  0, 1, 0, 2,\n  0, 100, 0, 200),ncol=4, byrow=TRUE)\n\n# przykładowe przdziały do klas\nassigs1 <- NULL#matrix(c(2, 1, 2, 5, 2, 3),ncol=3, byrow=TRUE)\n\nmonotonicity <- c(TRUE, TRUE, FALSE)\n\ncardinalities <- NULL#matrix(c(1, 1, 2, 3, 1, 1), ncol=3, byrow=TRUE)\n\npairwiseComparisionsK <- matrix(c(1, 2, 0), ncol=3, byrow=TRUE)\n\npairwiseComparisionsL <- matrix(c(5, 2, 2), ncol=3, byrow=TRUE)\n\nmessage(\"--- starting tests, iteration 1\")\n\netri <- etric.init(alts, profs, assigs1, monotonicity, th=thresholds,\n                   cardinalities, pairwiseComparisionsK, pairwiseComparisionsL)\netri$constr$lhs[str_detect(rownames(etri$constr$lhs),\"PCL12.*\"),]",
    "created" : 1407236110132.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4249825340",
    "id" : "4D97930A",
    "lastKnownWriteTime" : 1408908200,
    "path" : "C:/Users/Patryk/Desktop/Praca Magisterska/ELECTRE TRI C/etric/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}